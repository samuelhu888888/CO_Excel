//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CO_Excel.CO_EXCEL_Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/CO_EXCEL_SERVICE")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CO_EXCEL_Service.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        CO_Excel.CO_EXCEL_Service.CompositeType GetDataUsingDataContract(CO_Excel.CO_EXCEL_Service.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTreeInfo", ReplyAction="http://tempuri.org/IService1/GetTreeInfoResponse")]
        string[] GetTreeInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/OpenFile", ReplyAction="http://tempuri.org/IService1/OpenFileResponse")]
        System.IO.Stream OpenFile(string fileTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/lockFile", ReplyAction="http://tempuri.org/IService1/lockFileResponse")]
        bool lockFile(string filepath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/unLockFile", ReplyAction="http://tempuri.org/IService1/unLockFileResponse")]
        bool unLockFile(string filepath);
        
        // CODEGEN: Generating message contract since the operation upLoad is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/upLoad", ReplyAction="http://tempuri.org/IService1/upLoadResponse")]
        CO_Excel.CO_EXCEL_Service.upLoadResponse upLoad(CO_Excel.CO_EXCEL_Service.RemoteFileInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UnsetReadOnly", ReplyAction="http://tempuri.org/IService1/UnsetReadOnlyResponse")]
        void UnsetReadOnly(string path);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string FileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream FileByteStream;
        
        public RemoteFileInfo() {
        }
        
        public RemoteFileInfo(string FileName, System.IO.Stream FileByteStream) {
            this.FileName = FileName;
            this.FileByteStream = FileByteStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class upLoadResponse {
        
        public upLoadResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : CO_Excel.CO_EXCEL_Service.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<CO_Excel.CO_EXCEL_Service.IService1>, CO_Excel.CO_EXCEL_Service.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public CO_Excel.CO_EXCEL_Service.CompositeType GetDataUsingDataContract(CO_Excel.CO_EXCEL_Service.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public string[] GetTreeInfo() {
            return base.Channel.GetTreeInfo();
        }
        
        public System.IO.Stream OpenFile(string fileTag) {
            return base.Channel.OpenFile(fileTag);
        }
        
        public bool lockFile(string filepath) {
            return base.Channel.lockFile(filepath);
        }
        
        public bool unLockFile(string filepath) {
            return base.Channel.unLockFile(filepath);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CO_Excel.CO_EXCEL_Service.upLoadResponse CO_Excel.CO_EXCEL_Service.IService1.upLoad(CO_Excel.CO_EXCEL_Service.RemoteFileInfo request) {
            return base.Channel.upLoad(request);
        }
        
        public void upLoad(string FileName, System.IO.Stream FileByteStream) {
            CO_Excel.CO_EXCEL_Service.RemoteFileInfo inValue = new CO_Excel.CO_EXCEL_Service.RemoteFileInfo();
            inValue.FileName = FileName;
            inValue.FileByteStream = FileByteStream;
            CO_Excel.CO_EXCEL_Service.upLoadResponse retVal = ((CO_Excel.CO_EXCEL_Service.IService1)(this)).upLoad(inValue);
        }
        
        public void UnsetReadOnly(string path) {
            base.Channel.UnsetReadOnly(path);
        }
    }
}
